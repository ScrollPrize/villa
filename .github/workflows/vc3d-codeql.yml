name: CodeQL

on:
  pull_request:
    paths:
      - 'volume-cartographer/**'
      - '.github/workflows/vc3d-codeql.yml'
  push:
    branches: [ main ]  # scan after merge too
    paths:
      - 'volume-cartographer/**'
      - '.github/workflows/vc3d-codeql.yml'
  schedule:
    # Friday 11:43 UTC
    - cron: '43 11 * * 5'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # âš¡ Fast PR scan: no compile, quick feedback
  analyze_fast:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL (no build)
        uses: github/codeql-action/init@v3
        with:
          languages: c-cpp
          build-mode: none
          queries: security-extended

      - name: Analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:c-cpp"

  # ðŸ§ª Deep scan for push/schedule: compiles with fast settings
  analyze_deep:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      security-events: write
      contents: read
      packages: read
    defaults:
      run:
        working-directory: ./volume-cartographer
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # history-aware queries if needed

      - name: Install build deps
        run: |
          set -euxo pipefail
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            build-essential git cmake ninja-build ccache \
            qt6-base-dev libboost-system-dev libboost-program-options-dev \
            libceres-dev xtensor-dev libopencv-dev libxsimd-dev libblosc-dev libspdlog-dev \
            libgsl-dev libsdl2-dev libcurl4-openssl-dev

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt','**/*.cmake') }}
          restore-keys: ccache-${{ runner.os }}-

      - name: Enable ccache
        run: |
          mkdir -p ~/.ccache
          echo 'max_size = 2G' >> ~/.ccache/ccache.conf || true

          echo "CC=ccache gcc"  >> $GITHUB_ENV
          echo "CXX=ccache g++" >> $GITHUB_ENV


      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: c-cpp
          build-mode: manual
          queries: security-extended,security-and-quality

      - name: Configure (Ninja, fast flags)
        run: |
          cmake -S . -B build -G Ninja \
                -DVC_WITH_CUDA_SPARSE=off \
                -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=Debug

      - name: Build (fast)
        run: cmake --build build --parallel

      - name: Analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:c-cpp"
